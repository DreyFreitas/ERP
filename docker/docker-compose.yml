version: '3.8'

services:
  # Frontend
  frontend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.frontend
    ports:
      - "7000:7000"
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://localhost:7001
    networks:
      - erp-network

  # Backend
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    ports:
      - "7001:7001"
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=development
      - PORT=7001
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/erp_freitex
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_REFRESH_SECRET=your-super-secret-refresh-key-change-in-production
    volumes:
      - ../backend:/app
      - /app/node_modules
    networks:
      - erp-network

  # PostgreSQL
  postgres:
    image: postgres:15-alpine
    ports:
      - "7002:5432"
    environment:
      - POSTGRES_DB=erp_freitex
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - erp-network

  # Redis (opcional)
  redis:
    image: redis:7-alpine
    ports:
      - "7003:6379"
    volumes:
      - redis_data:/data
    networks:
      - erp-network

  # Adminer (gerenciamento do banco)
  adminer:
    image: adminer:latest
    ports:
      - "7004:8080"
    depends_on:
      - postgres
    networks:
      - erp-network

volumes:
  postgres_data:
  redis_data:

networks:
  erp-network:
    driver: bridge

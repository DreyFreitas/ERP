# Script de migra√ß√£o segura do banco de dados ERP Freitex (PowerShell)
# Este script faz backup autom√°tico antes de qualquer migra√ß√£o

Write-Host "üõ°Ô∏è  MIGRA√á√ÉO SEGURA - ERP FREITEX" -ForegroundColor Magenta
Write-Host "==================================" -ForegroundColor Magenta

# Fazer backup autom√°tico antes da migra√ß√£o
Write-Host "üîÑ Fazendo backup autom√°tico antes da migra√ß√£o..." -ForegroundColor Yellow
$BackupName = "pre_migration_$(Get-Date -Format 'yyyyMMdd_HHmmss')"

# Executar script de backup
& ".\backup-database.ps1" $BackupName

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Erro no backup! Migra√ß√£o cancelada por seguran√ßa." -ForegroundColor Red
    exit 1
}

Write-Host "‚úÖ Backup realizado com sucesso!" -ForegroundColor Green
Write-Host ""

# Verificar se h√° dados importantes antes da migra√ß√£o
Write-Host "üîç Verificando dados existentes..." -ForegroundColor Cyan
docker compose exec postgres psql -U postgres -d erp_freitex -c "
SELECT 
    'companies' as tabela, COUNT(*) as registros 
FROM companies 
UNION ALL 
SELECT 'users' as tabela, COUNT(*) as registros 
FROM users 
UNION ALL 
SELECT 'customers' as tabela, COUNT(*) as registros 
FROM customers 
UNION ALL 
SELECT 'products' as tabela, COUNT(*) as registros 
FROM products;
"

Write-Host ""
Write-Host "‚ö†Ô∏è  ATEN√á√ÉO: Voc√™ est√° prestes a executar uma migra√ß√£o do banco de dados!" -ForegroundColor Red
Write-Host "üìÅ Backup salvo como: $BackupName" -ForegroundColor Cyan

$confirmation = Read-Host "Deseja continuar com a migra√ß√£o? (s/N)"

if ($confirmation -ne "s" -and $confirmation -ne "S") {
    Write-Host "‚ùå Migra√ß√£o cancelada pelo usu√°rio." -ForegroundColor Yellow
    Write-Host "üíæ Backup mantido em: .\backups\$BackupName.sql" -ForegroundColor Cyan
    exit 1
}

Write-Host "üîÑ Executando migra√ß√£o do Prisma..." -ForegroundColor Yellow

# Executar migra√ß√£o do Prisma
docker compose exec backend npx prisma migrate dev

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Migra√ß√£o conclu√≠da com sucesso!" -ForegroundColor Green
    Write-Host ""
    Write-Host "üîç Verificando integridade ap√≥s migra√ß√£o..." -ForegroundColor Cyan
    
    # Verificar se os dados ainda est√£o intactos
    docker compose exec postgres psql -U postgres -d erp_freitex -c "
    SELECT 
        'companies' as tabela, COUNT(*) as registros 
    FROM companies 
    UNION ALL 
    SELECT 'users' as tabela, COUNT(*) as registros 
    FROM users 
    UNION ALL 
    SELECT 'customers' as tabela, COUNT(*) as registros 
    FROM customers 
    UNION ALL 
    SELECT 'products' as tabela, COUNT(*) as registros 
    FROM products;
    "
    
    Write-Host ""
    Write-Host "‚úÖ Migra√ß√£o segura conclu√≠da!" -ForegroundColor Green
    Write-Host "üíæ Backup dispon√≠vel em: .\backups\$BackupName.sql" -ForegroundColor Cyan
} else {
    Write-Host "‚ùå Erro na migra√ß√£o!" -ForegroundColor Red
    Write-Host "üîÑ Restaurando backup..." -ForegroundColor Yellow
    & ".\restore-database.ps1" ".\backups\$BackupName.sql"
    Write-Host "‚úÖ Backup restaurado com sucesso!" -ForegroundColor Green
    exit 1
}

# =============================================================================
# DOCKERFILE OTIMIZADO DO NGINX PARA ERP FREITEX SOFTWARES
# Sistema ERP Multi-tenant com alta disponibilidade e performance
# =============================================================================

FROM nginx:1.25-alpine

# =============================================================================
# METADADOS E INFORMAÇÕES
# =============================================================================
LABEL maintainer="ERP Freitex Softwares <contato@freitex.com>"
LABEL description="Nginx otimizado para sistema ERP multi-tenant"
LABEL version="1.0.0"

# =============================================================================
# INSTALAÇÃO DE DEPENDÊNCIAS E MÓDULOS
# =============================================================================

# Instalar dependências necessárias
RUN apk add --no-cache \
    curl \
    wget \
    tzdata \
    && rm -rf /var/cache/apk/*

# Configurar timezone para Brasil
RUN cp /usr/share/zoneinfo/America/Sao_Paulo /etc/localtime \
    && echo "America/Sao_Paulo" > /etc/timezone

# =============================================================================
# CONFIGURAÇÕES DE SEGURANÇA
# =============================================================================

# Configurar permissões de diretórios
RUN mkdir -p /var/cache/nginx/client_temp \
    && mkdir -p /var/cache/nginx/proxy_temp \
    && mkdir -p /var/cache/nginx/fastcgi_temp \
    && mkdir -p /var/cache/nginx/uwsgi_temp \
    && mkdir -p /var/cache/nginx/scgi_temp \
    && mkdir -p /var/log/nginx \
    && chown -R nginx:nginx /var/cache/nginx \
    && chown -R nginx:nginx /var/log/nginx \
    && chown -R nginx:nginx /etc/nginx

# =============================================================================
# CONFIGURAÇÕES DO NGINX
# =============================================================================

# Remover configuração padrão
RUN rm -f /etc/nginx/conf.d/default.conf

# Copiar configuração personalizada
COPY docker/nginx.conf /etc/nginx/nginx.conf

# Criar diretórios para logs
RUN mkdir -p /var/log/nginx \
    && touch /var/log/nginx/access.log \
    && touch /var/log/nginx/error.log \
    && touch /var/log/nginx/api.log \
    && chown -R nginx:nginx /var/log/nginx

# =============================================================================
# CONFIGURAÇÕES DE PERFORMANCE
# =============================================================================

# Nota: Limites do sistema são configurados no docker-compose.yml ou no host

# =============================================================================
# HEALTH CHECK
# =============================================================================

# Adicionar health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/nginx-health || exit 1

# =============================================================================
# CONFIGURAÇÕES DE REDE
# =============================================================================

# Expor porta 80
EXPOSE 80

# =============================================================================
# CONFIGURAÇÕES DE VOLUME
# =============================================================================

# Volumes para logs e cache
VOLUME ["/var/log/nginx", "/var/cache/nginx"]

# =============================================================================
# COMANDO DE INICIALIZAÇÃO
# =============================================================================

# Script de inicialização
COPY docker/nginx-entrypoint.sh /docker-entrypoint.sh
RUN chmod +x /docker-entrypoint.sh

# Comando para iniciar o Nginx
ENTRYPOINT ["/docker-entrypoint.sh"]
CMD ["nginx", "-g", "daemon off;"]

# =============================================================================
# CONFIGURAÇÃO NGINX COM SSL PARA PRODUÇÃO - ERP FREITEX SOFTWARES
# Sistema ERP Multi-tenant com alta disponibilidade, performance e segurança
# =============================================================================

# Configuração de usuário e processos
user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;

# Configuração de logs
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Configuração de eventos otimizada
events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

# Configuração HTTP principal
http {
    # =============================================================================
    # CONFIGURAÇÕES BÁSICAS E PERFORMANCE
    # =============================================================================
    
    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Configurações de performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    server_tokens off;
    
    # Configurações de buffer otimizadas
    client_body_buffer_size 128k;
    client_max_body_size 50m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;
    
    # Configurações de timeout
    client_header_timeout 3m;
    client_body_timeout 3m;
    send_timeout 3m;
    
    # =============================================================================
    # CONFIGURAÇÕES SSL/TLS
    # =============================================================================
    
    # Configurações SSL otimizadas
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # OCSP Stapling
    ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # =============================================================================
    # COMPRESSÃO E CACHE
    # =============================================================================
    
    # Compressão Gzip
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    gzip_min_length 1000;
    gzip_disable "msie6";
    
    # Compressão Brotli (se disponível)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # =============================================================================
    # RATE LIMITING E PROTEÇÃO DDoS
    # =============================================================================
    
    # Rate limiting para API
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;
    
    # Rate limiting para conexões
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    limit_conn_zone $server_name zone=conn_limit_per_server:10m;
    
    # =============================================================================
    # CONFIGURAÇÕES DE SEGURANÇA
    # =============================================================================
    
    # Headers de segurança
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:; font-src 'self' data:; connect-src 'self' ws: wss:;" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Ocultar versão do Nginx
    server_tokens off;
    
    # =============================================================================
    # UPSTREAM CONFIGURATIONS
    # =============================================================================
    
    # Backend upstream com health checks
    upstream backend {
        server backend:7001 max_fails=3 fail_timeout=30s;
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }
    
    # Frontend upstream
    upstream frontend {
        server frontend:7000 max_fails=3 fail_timeout=30s;
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }
    
    # =============================================================================
    # LOGS ESTRUTURADOS
    # =============================================================================
    
    # Log format para análise
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    # Log format para API
    log_format api_log '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       'rt=$request_time uct="$upstream_connect_time" '
                       'uht="$upstream_header_time" urt="$upstream_response_time" '
                       'company_id="$http_x_company_id" user_id="$http_x_user_id"';
    
    access_log /var/log/nginx/access.log main;
    
    # =============================================================================
    # REDIRECIONAMENTO HTTP PARA HTTPS
    # =============================================================================
    
    server {
        listen 80;
        server_name _;
        
        # Redirecionar tudo para HTTPS
        return 301 https://$host$request_uri;
    }
    
    # =============================================================================
    # CONFIGURAÇÃO DO SERVIDOR HTTPS PRINCIPAL
    # =============================================================================
    
    server {
        listen 443 ssl http2;
        server_name _;
        
        # =============================================================================
        # CONFIGURAÇÕES SSL
        # =============================================================================
        
        # Certificados SSL (ajustar caminhos conforme necessário)
        ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
        ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
        
        # Configurações de segurança
        limit_conn conn_limit_per_ip 20;
        limit_conn conn_limit_per_server 1000;
        
        # =============================================================================
        # CONFIGURAÇÕES DE CORS OTIMIZADAS
        # =============================================================================
        
        # CORS para produção (ajustar origins conforme necessário)
        add_header Access-Control-Allow-Origin $http_origin always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Company-ID,X-User-ID" always;
        add_header Access-Control-Allow-Credentials true always;
        add_header Access-Control-Max-Age 86400 always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin $http_origin;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Company-ID,X-User-ID";
            add_header Access-Control-Max-Age 86400;
            add_header Content-Type text/plain;
            add_header Content-Length 0;
            return 204;
        }
        
        # =============================================================================
        # HEALTH CHECKS E MONITORAMENTO
        # =============================================================================
        
        # Health check do Nginx
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Health check do backend
        location /health {
            proxy_pass http://backend/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
            access_log off;
        }
        
        # =============================================================================
        # API ENDPOINTS COM RATE LIMITING
        # =============================================================================
        
        # Login com rate limiting rigoroso
        location /api/auth/login {
            limit_req zone=login burst=3 nodelay;
            limit_req_status 429;
            
            proxy_pass http://backend/api/auth/login;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Configurações de proxy otimizadas
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_connect_timeout 10s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            
            # Logs específicos para login
            access_log /var/log/nginx/api.log api_log;
        }
        
        # Uploads com rate limiting
        location /api/upload {
            limit_req zone=upload burst=5 nodelay;
            limit_req_status 429;
            
            proxy_pass http://backend/api/upload;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Configurações para upload de arquivos grandes
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            proxy_request_buffering off;
            proxy_max_temp_file_size 0;
        }
        
        # Backup com configurações especiais
        location /api/backup {
            limit_req zone=api burst=2 nodelay;
            limit_req_status 429;
            
            proxy_pass http://backend/api/backup;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Configurações para operações de backup
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            proxy_request_buffering off;
            proxy_max_temp_file_size 0;
        }
        
        # API geral com rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            limit_req_status 429;
            
            proxy_pass http://backend/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Configurações de proxy otimizadas
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # Retry configuration
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 30s;
            
            # Logs específicos para API
            access_log /var/log/nginx/api.log api_log;
        }
        
        # =============================================================================
        # WEBSOCKET SUPPORT
        # =============================================================================
        
        location /ws {
            proxy_pass http://backend/ws;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Configurações específicas para WebSocket
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
            proxy_buffering off;
        }
        
        # =============================================================================
        # ARQUIVOS ESTÁTICOS E UPLOADS
        # =============================================================================
        
        # Servir arquivos de upload com cache otimizado
        location /uploads/ {
            proxy_pass http://backend/uploads/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Configurações de cache para arquivos estáticos
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Compressão para arquivos de texto
            gzip_static on;
            
            # Configurações de proxy
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
            proxy_buffering on;
        }
        
        # =============================================================================
        # FRONTEND (REACT SPA)
        # =============================================================================
        
        # Frontend principal
        location / {
            proxy_pass http://frontend:7000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Configurações para hot reload do React
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Configurações de proxy otimizadas
            proxy_connect_timeout 10s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            
            # Configurações para SPA
            proxy_intercept_errors on;
            error_page 404 = @fallback;
            error_page 502 503 504 = @frontend_error;
            
            # Retry configuration
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 30s;
        }
        
        # Fallback para SPA - redirecionar todas as rotas para index.html
        location @fallback {
            proxy_pass http://frontend:7000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Configurações de proxy
            proxy_connect_timeout 10s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }
        
        # =============================================================================
        # PÁGINAS DE ERRO PERSONALIZADAS
        # =============================================================================
        
        # Página de erro quando frontend não está disponível
        location @frontend_error {
            return 503 '{"error": "Frontend não está disponível", "message": "Aguarde alguns minutos para o serviço inicializar.", "timestamp": "$time_iso8601"}';
            add_header Content-Type application/json;
        }
        
        # Página de erro para rate limiting
        error_page 429 /429.html;
        location = /429.html {
            internal;
            return 429 '{"error": "Rate limit exceeded", "message": "Muitas requisições. Tente novamente em alguns segundos.", "timestamp": "$time_iso8601"}';
            add_header Content-Type application/json;
        }
        
        # Página de erro 404
        error_page 404 /404.html;
        location = /404.html {
            internal;
            return 404 '{"error": "Not found", "message": "Recurso não encontrado", "timestamp": "$time_iso8601"}';
            add_header Content-Type application/json;
        }
        
        # Página de erro 500
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            internal;
            return 500 '{"error": "Internal server error", "message": "Erro interno do servidor", "timestamp": "$time_iso8601"}';
            add_header Content-Type application/json;
        }
    }
}
